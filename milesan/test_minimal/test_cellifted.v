/* Generated by Yosys 0.29+11 (git sha1 a130c1a84, clang 14.0.0-1ubuntu1 -fPIC -Os) */

(* cellift =  1  *)
(* cells_not_processed =  1  *)
(* src = "test.v:1.1-37.10" *)
module test(axi_rd_data, rst_ni, clk_i, dcache_rd_shift_d_o, dcache_rd_shift_q_o, axi_rd_last, axi_rd_last_t0, dcache_rd_shift_q_o_t0, dcache_rd_shift_d_o_t0, clk_i_t0, rst_ni_t0, axi_rd_data_t0);
  wire [7:0] _00_;
  wire [7:0] _01_;
  wire [7:0] _02_;
  wire [7:0] _03_;
  wire [7:0] _04_;
  wire [7:0] _05_;
  wire [7:0] _06_;
  wire [7:0] _07_;
  (* src = "test.v:9.19-9.30" *)
  input [7:0] axi_rd_data;
  wire [7:0] axi_rd_data;
  (* cellift = 32'd1 *)
  input [7:0] axi_rd_data_t0;
  wire [7:0] axi_rd_data_t0;
  (* src = "test.v:14.13-14.24" *)
  input axi_rd_last;
  wire axi_rd_last;
  (* cellift = 32'd1 *)
  input axi_rd_last_t0;
  wire axi_rd_last_t0;
  (* src = "test.v:11.13-11.18" *)
  input clk_i;
  wire clk_i;
  (* cellift = 32'd1 *)
  input clk_i_t0;
  wire clk_i_t0;
  (* src = "test.v:18.6-18.20" *)
  (* unused_bits = "0" *)
  wire dcache_first_d;
  (* cellift = 32'd1 *)
  (* src = "test.v:18.6-18.20" *)
  (* unused_bits = "0" *)
  wire dcache_first_d_t0;
  (* src = "test.v:25.7-25.24" *)
  wire dcache_rd_first_q;
  (* cellift = 32'd1 *)
  (* src = "test.v:25.7-25.24" *)
  wire dcache_rd_first_q_t0;
  (* src = "test.v:15.13-15.30" *)
  wire [15:0] dcache_rd_shift_d;
  (* src = "test.v:12.21-12.40" *)
  output [15:0] dcache_rd_shift_d_o;
  wire [15:0] dcache_rd_shift_d_o;
  (* cellift = 32'd1 *)
  output [15:0] dcache_rd_shift_d_o_t0;
  wire [15:0] dcache_rd_shift_d_o_t0;
  (* cellift = 32'd1 *)
  (* src = "test.v:15.13-15.30" *)
  wire [15:0] dcache_rd_shift_d_t0;
  (* src = "test.v:16.13-16.30" *)
  reg [15:0] dcache_rd_shift_q;
  (* src = "test.v:13.21-13.40" *)
  output [15:0] dcache_rd_shift_q_o;
  wire [15:0] dcache_rd_shift_q_o;
  (* cellift = 32'd1 *)
  output [15:0] dcache_rd_shift_q_o_t0;
  wire [15:0] dcache_rd_shift_q_o_t0;
  (* cellift = 32'd1 *)
  (* src = "test.v:16.13-16.30" *)
  reg [15:0] dcache_rd_shift_q_t0;
  (* src = "test.v:10.13-10.19" *)
  input rst_ni;
  wire rst_ni;
  (* cellift = 32'd1 *)
  input rst_ni_t0;
  wire rst_ni_t0;
  (* taint_ff = 32'd1 *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) dcache_rd_shift_q_t0 <= 16'h0000;
    else dcache_rd_shift_q_t0 <= { axi_rd_data_t0, dcache_rd_shift_d_o_t0[7:0] };
  assign _00_ = ~ { dcache_rd_first_q, dcache_rd_first_q, dcache_rd_first_q, dcache_rd_first_q, dcache_rd_first_q, dcache_rd_first_q, dcache_rd_first_q, dcache_rd_first_q };
  assign _04_ = { dcache_rd_first_q_t0, dcache_rd_first_q_t0, dcache_rd_first_q_t0, dcache_rd_first_q_t0, dcache_rd_first_q_t0, dcache_rd_first_q_t0, dcache_rd_first_q_t0, dcache_rd_first_q_t0 } | _00_;
  assign _05_ = { dcache_rd_first_q_t0, dcache_rd_first_q_t0, dcache_rd_first_q_t0, dcache_rd_first_q_t0, dcache_rd_first_q_t0, dcache_rd_first_q_t0, dcache_rd_first_q_t0, dcache_rd_first_q_t0 } | { dcache_rd_first_q, dcache_rd_first_q, dcache_rd_first_q, dcache_rd_first_q, dcache_rd_first_q, dcache_rd_first_q, dcache_rd_first_q, dcache_rd_first_q };
  assign _01_ = dcache_rd_shift_q_t0[15:8] & _04_;
  assign _02_ = axi_rd_data_t0 & _05_;
  assign _06_ = _01_ | _02_;
  assign _07_ = dcache_rd_shift_q[15:8] ^ axi_rd_data;
  assign _03_ = { dcache_rd_first_q_t0, dcache_rd_first_q_t0, dcache_rd_first_q_t0, dcache_rd_first_q_t0, dcache_rd_first_q_t0, dcache_rd_first_q_t0, dcache_rd_first_q_t0, dcache_rd_first_q_t0 } & _07_;
  assign dcache_rd_shift_d_o_t0[7:0] = _03_ | _06_;
  (* src = "test.v:28.2-36.6" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) dcache_rd_shift_q <= 16'h0000;
    else dcache_rd_shift_q <= { axi_rd_data, dcache_rd_shift_d_o[7:0] };
  assign dcache_rd_shift_d_o[7:0] = dcache_rd_first_q ? (* full_case = 32'd1 *) (* src = "test.v:25.7-25.24|test.v:25.3-26.42" *) axi_rd_data : dcache_rd_shift_q[15:8];
  assign dcache_first_d = axi_rd_last;
  assign dcache_first_d_t0 = axi_rd_last_t0;
  assign dcache_rd_shift_d = { axi_rd_data, dcache_rd_shift_d_o[7:0] };
  assign dcache_rd_shift_d_o[15:8] = axi_rd_data;
  assign dcache_rd_shift_d_o_t0[15:8] = axi_rd_data_t0;
  assign dcache_rd_shift_d_t0 = { axi_rd_data_t0, dcache_rd_shift_d_o_t0[7:0] };
  assign dcache_rd_shift_q_o = dcache_rd_shift_q;
  assign dcache_rd_shift_q_o_t0 = dcache_rd_shift_q_t0;
endmodule
